/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface;

import userinterface.SystemAdminWorkArea.*;
import Business.Customer.Customer;
import Business.DeliveryMan.DeliveryMan;
import Business.OxygenPlant.OxygenPlant;
import Business.EcoSystem;
import Business.Employee.Employee;
import Business.PendingAccountApproval;
import Business.OxygenPlant.OxygenPlant;
import Business.Role.AdminRole;
import Business.Role.CustomerRole;
import Business.Role.DeliverManRole;
import Business.UserAccount.UserAccount;
import Business.UserAccount.UserAccountDirectory;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.ArrayList;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import Business.Validation.Validation;
import java.awt.Dimension;
import javamailapp.javamail.JavaMailSystem;
import javax.swing.JSplitPane;
import javax.swing.UIManager;

/**
 *
 * @author Nithin Bharadwaj
 */
public class RequestAccountCreation extends javax.swing.JPanel {

    /**
     * Creates new form RequestAccountCreation
     */
    JSplitPane userProcessContainer;
    JPanel container;
    EcoSystem system;
    Validation validation;
    
    public RequestAccountCreation(JSplitPane userProcessContainer, JPanel container, 
            EcoSystem system) {
        initComponents();
        this.system = system;
        this.container = container;
        this.userProcessContainer = userProcessContainer;
        this.validation = new Validation();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPasswordField1 = new javax.swing.JPasswordField();
        btnGoBack = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btnSubmit = new javax.swing.JButton();
        comboRole = new javax.swing.JComboBox();
        txtPassword = new javax.swing.JPasswordField();
        txtPasswordConfirmation = new javax.swing.JPasswordField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        txtPhoneNumber = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtEmailAddress = new javax.swing.JTextField();
        imgLabel = new javax.swing.JLabel();

        jPasswordField1.setText("jPasswordField1");

        setBackground(new java.awt.Color(247, 247, 247));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnGoBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/back.png"))); // NOI18N
        btnGoBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGoBackActionPerformed(evt);
            }
        });
        add(btnGoBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(36, 26, 60, 54));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Request For Account Creation");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(148, 41, 385, 39));

        jLabel2.setText("Name :");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(226, 103, -1, -1));
        add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(288, 98, 124, -1));

        jLabel3.setText("Username :");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 147, -1, -1));
        add(txtUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(288, 142, 124, -1));

        jLabel4.setText("Password :");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(203, 191, -1, -1));

        jLabel5.setText("Confirm Password :");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(148, 235, -1, -1));

        jLabel6.setText("Role :");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(235, 419, -1, -1));

        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });
        add(btnSubmit, new org.netbeans.lib.awtextra.AbsoluteConstraints(288, 460, 77, -1));

        comboRole.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Customer", "Delivery Man" }));
        comboRole.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboRoleActionPerformed(evt);
            }
        });
        add(comboRole, new org.netbeans.lib.awtextra.AbsoluteConstraints(288, 415, 120, -1));
        add(txtPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(288, 186, 124, -1));
        add(txtPasswordConfirmation, new org.netbeans.lib.awtextra.AbsoluteConstraints(288, 230, 124, -1));

        jLabel8.setText("Address :");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(211, 279, -1, -1));

        jLabel9.setText("Phone Number :");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 323, -1, -1));
        add(txtAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(288, 274, 124, -1));
        add(txtPhoneNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(288, 318, 124, -1));

        jLabel10.setText("Email :");
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(228, 376, -1, -1));

        txtEmailAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailAddressActionPerformed(evt);
            }
        });
        add(txtEmailAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(288, 371, 124, -1));

        imgLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/new customer.gif"))); // NOI18N
        add(imgLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(-90, 10, 860, 600));
    }// </editor-fold>//GEN-END:initComponents

    private void btnGoBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGoBackActionPerformed
        // TODO add your handling code here:
//        this.userProcessContainer.remove(this);
          this.userProcessContainer.setRightComponent(this.container);
          this.userProcessContainer.revalidate();
//        this.userProcessContainer.remove(this);
//        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
//        layout.previous(userProcessContainer);
//        Component[] comps = this.userProcessContainer.getComponents();
//        for(Component comp : comps){
//            if(comp instanceof SystemAdminWorkAreaJPanel){
//                SystemAdminWorkAreaJPanel systemAdminWorkAreaJPanel= (SystemAdminWorkAreaJPanel) comp;
//                systemAdminWorkAreaJPanel.populateTree();
//            }
//        }
//        userNameJTextField.setEnabled(true);
//        passwordField.setEnabled(true);
//        loginJButton.setEnabled(true);
//
//        userNameJTextField.setText("");
//        passwordField.setText("");
//
//        this.userProcessContainer.removeAll();
//        JPanel blankJP = new JPanel();
//        this.userProcessContainer.add("blank", blankJP);
//        CardLayout crdLyt = (CardLayout) container.getLayout();
//        crdLyt.next(container);
//        dB4OUtil.storeSystem(system);
    }//GEN-LAST:event_btnGoBackActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
        String role = comboRole.getSelectedItem().toString();
        boolean nameValidation = this.validation.validateName(txtName);
        boolean userNameValidation = this.validation.validateUserName(txtUsername);
        boolean addressValidation = this.validation.validateAddress(txtAddress);
        boolean phoneNumberValidation = this.validation.validatePhoneNumber(txtPhoneNumber);
        boolean emailValidation = this.validation.validateEmail(txtEmailAddress);
        
        if(nameValidation && userNameValidation && addressValidation
                    && phoneNumberValidation && emailValidation
                && (txtPassword.getText().equals(txtPasswordConfirmation.getText()))){
            PendingAccountApproval pendingAccObj = new PendingAccountApproval();
            pendingAccObj.setName(txtName.getText());
            pendingAccObj.setUserName(txtUsername.getText());
            pendingAccObj.setPhoneNumber(Long.parseLong(txtPhoneNumber.getText()));
            pendingAccObj.setEmail(txtEmailAddress.getText());
            pendingAccObj.setPassword(txtPassword.getText());
            pendingAccObj.setAddress(txtAddress.getText());
            pendingAccObj.setRole(role);

            this.system.addPendingAccountApproval(pendingAccObj);
            try {
                JavaMailSystem.sendMail(txtEmailAddress.getText(),"Account Creation Request",
                                "Your request has been sent to System Administrator, And will get back to you");
            } catch (Exception ex) {
                System.err.println("Exception Ocurred : " + ex);
            }
            JOptionPane.showMessageDialog(this, "Sent to the Admin for Approval");
        }
        
//        UserAccountDirectory usersList = this.system.getUserAccountDirectory();
//        String role = (String) comboRole.getSelectedItem();
//        Employee employee = new Employee();
//        employee.setName(txtName.getText());
//        boolean userDoNotExists = true;
//        ArrayList<UserAccount> users = usersList.getUserAccountList();
//        for(UserAccount ua : users)
//        {
//            if(ua.getUsername().equals(txtUsername.getText()))
//                userDoNotExists = false;
//        }
//        if(txtPassword.getText().equals(txtPasswordConfirmation.getText()))
//        {
//            boolean nameValidation = this.validation.validateName(txtName);
//            boolean userNameValidation = this.validation.validateUserName(txtUsername);
//            boolean addressValidation = this.validation.validateAddress(txtAddress);
//            boolean phoneNumberValidation = this.validation.validatePhoneNumber(txtPhoneNumber);
//            if(nameValidation && userNameValidation && addressValidation && phoneNumberValidation){
//                if(role.equals("Customer")){
//                    usersList.createUserAccount(txtUsername.getText(),txtPassword.getText(), employee, new CustomerRole());
//                    UserAccount ua = usersList.getUserAccount(txtUsername.getText());
//                    Customer customer = new Customer(ua);
//                    customer.setAddress(txtAddress.getText());
//                    customer.setPhoneNumber(Long.parseLong(txtPhoneNumber.getText()));
//                    System.out.println(customer.getName());
//                    System.out.println(system.getCustomerDirectory());
//                    system.getCustomerDirectory().addCustomer(customer);
//                    JOptionPane.showMessageDialog(this, "Added the customer successfully");
//                    this.clearText();
//                }
//                else if(role.equals("Delivery Man")){
//                    usersList.createUserAccount(txtUsername.getText(),txtPassword.getText(), employee, new DeliverManRole());
//                    UserAccount ua = usersList.getUserAccount(txtUsername.getText());
//                    DeliveryMan deliveryAgent = new DeliveryMan(ua);
//                    deliveryAgent.setAddress(txtAddress.getText());
//                    deliveryAgent.setPhoneNumber(Long.parseLong(txtPhoneNumber.getText())); 
//                    deliveryAgent.setStatus("Available");
//                    system.getDeliveryManDirectory().addDeliveryAgent(deliveryAgent);
//                    JOptionPane.showMessageDialog(this, "Added the DeliveryMan successfully");
//                    this.clearText();
//                }
//                else if(role.equals("OxygenPlant Admin")){
//                    boolean restaurantValidation = this.validation.validateName(txtRestaurantName);
//                    if(restaurantValidation){
//                        usersList.createUserAccount(txtUsername.getText(),
//                                txtPassword.getText(), employee, new AdminRole());
//                        UserAccount ua = usersList.getUserAccount(txtUsername.getText());
//                        OxygenPlant restaurantData = new OxygenPlant(txtRestaurantName.getText(),
//                                txtAddress.getText(), txtName.getText(),
//                                Long.parseLong(txtPhoneNumber.getText()), ua);
//                        system.getRestaurantDirectory().addRestaurant(restaurantData);
//                        JOptionPane.showMessageDialog(this, "Added the OxygenPlant and Admin Successfully");
//                        this.clearText();
//                    }
//                    else{
//                        JOptionPane.showMessageDialog(this, "Invalid OxygenPlant Name!!!!");
////                        this.clearText();
//                    }
//                    
//                }
//            }else{
//                String errorMessage = String.format("Profile info NOT SAVED!!! \n"
//                    + "Name validation Status: %s \n UserName Validation : %s \n" +
//                    "Phone Number Validation : %s\n" +
//                    "Address Validation : %s \n"
//                                , nameValidation, userNameValidation,
//                                phoneNumberValidation, addressValidation
//                                );
//                UIManager.put("OptionPane.minimumSize",new Dimension(250,250)); 
//                JOptionPane.showMessageDialog(this, errorMessage);
//                this.clearText();
//            }
//            
//        }
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void comboRoleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboRoleActionPerformed
        // TODO add your handling code here:
//        if(comboRole.getSelectedItem().toString().equals("OxygenPlant Admin")){
//            txtBusinessName.setEditable(true);
//        }
//        else{
//            txtBusinessName.setEditable(false);
//        }
    }//GEN-LAST:event_comboRoleActionPerformed

    private void txtEmailAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailAddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailAddressActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGoBack;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JComboBox comboRole;
    private javax.swing.JLabel imgLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtEmailAddress;
    private javax.swing.JTextField txtName;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JPasswordField txtPasswordConfirmation;
    private javax.swing.JTextField txtPhoneNumber;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables

    private void clearText(){
        JTextField[] textFields = {txtName,txtPassword,txtPasswordConfirmation,
                     txtUsername, txtAddress, txtPhoneNumber};
        for(JTextField pk : textFields){
            pk.setText("");
        }
//        txtPassword.setText("");
//        txtPasswordConfirmation.setText("");
        
    }

}
