/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.OxygenPlantAdminRole;

import Business.Customer.Customer;
import Business.EcoSystem;
import Business.Menu.Item;
import Business.OxygenPlant.OxygenPlant;
import Business.Validation.Validation;
import java.awt.CardLayout;
import java.awt.Component;
import java.awt.Dimension;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import userinterface.SystemAdminWorkArea.SystemAdminWorkAreaJPanel;

/**
 *
 * @author Nithin Bharadwaj
 */
public class ManageMenu extends javax.swing.JPanel {

    /**
     * Creates new form ManageMenu
     */
    JPanel userProcessContainer;
    EcoSystem system;
    OxygenPlant res;
    Validation validation;
    public ManageMenu(JPanel userProcessContainer, EcoSystem system, OxygenPlant res) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        this.res = res;
        this.populateMenu();
        this.validation = new Validation();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMenu = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtItemName = new javax.swing.JTextField();
        txtPrice = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        btnView = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnUpdateMenu = new javax.swing.JButton();
        txtQuantity = new javax.swing.JTextField();
        lbQuantity = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(246, 252, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Manage Product");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(233, 62, 300, -1));

        tblMenu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Item Name", "Price", "Quantity"
            }
        ));
        jScrollPane1.setViewportView(tblMenu);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(162, 129, -1, 102));

        jLabel2.setText("Item Name :");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(263, 367, -1, -1));

        jLabel3.setText("Price :");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(301, 423, -1, -1));
        add(txtItemName, new org.netbeans.lib.awtextra.AbsoluteConstraints(361, 362, 169, -1));
        add(txtPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(361, 418, 169, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Add/Update Menu");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(234, 312, 300, -1));

        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/back.png"))); // NOI18N
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(48, 29, 58, -1));

        btnView.setText("View");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });
        add(btnView, new org.netbeans.lib.awtextra.AbsoluteConstraints(532, 236, -1, -1));

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(532, 277, -1, -1));

        btnUpdateMenu.setText("Add/Update");
        btnUpdateMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateMenuActionPerformed(evt);
            }
        });
        add(btnUpdateMenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(298, 512, -1, -1));
        add(txtQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(361, 474, 169, -1));

        lbQuantity.setText("Quantity :");
        add(lbQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(277, 479, -1, -1));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/oxy1.gif"))); // NOI18N
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 100, 510, 210));
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblMenu.getSelectedRow();
        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select a row to View");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblMenu.getModel();
        Item selectedItem = (Item)model.getValueAt(selectedRowIndex, 0);
        this.res.getMenu().getMenu().remove(selectedItem);
        JOptionPane.showMessageDialog(this, "Deleted the entry Successfully");
        this.populateMenu();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        this.userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
        Component[] comps = this.userProcessContainer.getComponents();
        for(Component comp : comps){
            if(comp instanceof AdminWorkAreaJPanel){
                AdminWorkAreaJPanel adminWorkPanel= (AdminWorkAreaJPanel) comp;
//                systemAdminWorkAreaJPanel.populateTree();
            }
        }
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnUpdateMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateMenuActionPerformed
        // TODO add your handling code here:
        boolean validateItemName = this.validation.validateItemName(txtItemName);
        boolean validateItemPrice = this.validation.validateItemPrice(txtPrice);
        boolean validateItemQuantity = this.validation.validateItemPrice(txtQuantity);
        if(validateItemName && validateItemPrice && validateItemQuantity){
            String itemName = txtItemName.getText();
            double price = Double.parseDouble(txtPrice.getText());
            int quantityToUpdate = Integer.parseInt(txtQuantity.getText());
            try{
                int selectedRowIndex = tblMenu.getSelectedRow();
                if(selectedRowIndex < 0){
                    throw new Exception("No row selected in table");
    //                JOptionPane.showMessageDialog(this, "Please select a row to View");

                }
                DefaultTableModel model = (DefaultTableModel) tblMenu.getModel();
                Item selectedItem = (Item)model.getValueAt(selectedRowIndex, 0);

                this.res.getMenu().getMenu().get(selectedRowIndex).setItemName(itemName);
                this.res.getMenu().getMenu().get(selectedRowIndex).setPrice(price);
                this.res.getMenu().getMenu().get(selectedRowIndex).setQuantity(quantityToUpdate);
                JOptionPane.showMessageDialog(this, "Updated the entry Successfully");

                }catch(Exception e){
                    this.res.getMenu().addNewItem(itemName, price, this.res.getOxygenPlantName(), 100);
                    JOptionPane.showMessageDialog(this, "Added the entry Successfully");
                }
                this.populateMenu();
        }else{
            String errorMessage = String.format("Item NOT SAVED!!! \n"
                    + "ItemName Validation Status: %s \n ItemPrice Validation Status : %s \n" 
                                , validateItemName, validateItemPrice
                           );
                UIManager.put("OptionPane.minimumSize",new Dimension(250,250)); 
                JOptionPane.showMessageDialog(this, errorMessage);
        
        }
        txtItemName.setText("");
        txtPrice.setText("");
        txtQuantity.setText("");
    }//GEN-LAST:event_btnUpdateMenuActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblMenu.getSelectedRow();
        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select a row to View");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblMenu.getModel();
        Item selectedItem = (Item)model.getValueAt(selectedRowIndex, 0);
        txtItemName.setText("");
        txtItemName.setText(selectedItem.getItemName());
        txtPrice.setText("");
        txtPrice.setText(String.valueOf(selectedItem.getPrice()));
        txtQuantity.setText("");
        txtQuantity.setText(String.valueOf(selectedItem.getQuantity()));
    }//GEN-LAST:event_btnViewActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdateMenu;
    private javax.swing.JButton btnView;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbQuantity;
    private javax.swing.JTable tblMenu;
    private javax.swing.JTextField txtItemName;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtQuantity;
    // End of variables declaration//GEN-END:variables
    
    private void populateMenu(){
        System.out.println("Inside method to populate menu for restaurant");
        DefaultTableModel model = (DefaultTableModel) tblMenu.getModel();
        model.setRowCount(0);
        ArrayList<Item> itemList;
        try{
            itemList = this.res.getMenu().getMenu();
        }catch(Exception e){
            itemList = new ArrayList<Item>();
        }
        
        for(Item item : itemList){
            Object[] row = new Object[3];
            row[0] = item;
            row[1] = item.getPrice();
            row[2] = item.getQuantity();
            model.addRow(row);
        }
    }

}
