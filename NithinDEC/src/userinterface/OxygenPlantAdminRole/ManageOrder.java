/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.OxygenPlantAdminRole;

import Business.Customer.Customer;
import Business.DeliveryMan.DeliveryMan;
import Business.EcoSystem;
import Business.Menu.Item;
import Business.Order.Order;
import Business.OxygenPlant.OxygenPlant;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import userinterface.SystemAdminWorkArea.SystemAdminWorkAreaJPanel;

/**
 *
 * @author Nithin Bharadwaj
 */
public class ManageOrder extends javax.swing.JPanel {

    /**
     * Creates new form ManageOrder
     */
    JPanel userProcessContainer;
    EcoSystem system;
    OxygenPlant resta;
    public ManageOrder(JPanel userProcessContainer, EcoSystem system,
                    OxygenPlant resta) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        this.resta = resta;  
        this.populateCustomerOrdersTable();
        ArrayList<String> deliveryArr = new ArrayList();
        for (DeliveryMan dm : this.system.getDeliveryManDirectory().returnDeliveryAgentDetails()){
            deliveryArr.add(dm.getName());
        }
        comboDelivery.setModel(new DefaultComboBoxModel<String>(deliveryArr.toArray(new String[0])));
    }
    
    private void populateCustomerOrdersTable(){
        System.out.println("Populating customers orders");

        DefaultTableModel model = (DefaultTableModel) tblOrders.getModel();
        model.setRowCount(0);
        for(Order o : this.system.getOrderDirectory().getOrderDirectory()){
            if(o.getRestaurant().getOxygenPlantName().equals(
                this.resta.getOxygenPlantName())){
                System.out.println(o);
                Object[] row = new Object[5];
                row[0] = o;
                row[1] = o.getItem().getItemName();
                row[2] = o.getQuantity();
                row[3] = o.getRequestDate();
                row[4] = o.getOrderStatus();
                model.addRow(row);
            }
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnAccept = new javax.swing.JButton();
        btnReject = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblOrders = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        comboOrderId = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        comboDelivery = new javax.swing.JComboBox();
        btnAssignDeliveryAgent = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        btnRefreshOrders = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(246, 252, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Manage Orders");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(142, 41, 437, 46));

        btnAccept.setText("Accept Order");
        btnAccept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAcceptActionPerformed(evt);
            }
        });
        add(btnAccept, new org.netbeans.lib.awtextra.AbsoluteConstraints(551, 253, -1, -1));

        btnReject.setText("Reject Order");
        btnReject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRejectActionPerformed(evt);
            }
        });
        add(btnReject, new org.netbeans.lib.awtextra.AbsoluteConstraints(556, 292, -1, -1));

        tblOrders.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "OrderId", "ItemName", "Quantity", "Order Placed On", "Order Status"
            }
        ));
        jScrollPane2.setViewportView(tblOrders);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(122, 154, 555, 93));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Assign Delivery");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(292, 314, 170, 29));

        jLabel4.setText("Order Id :");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(307, 353, -1, -1));

        comboOrderId.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(comboOrderId, new org.netbeans.lib.awtextra.AbsoluteConstraints(378, 349, -1, -1));

        jLabel5.setText("Delivery Agent Name :");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(226, 392, -1, -1));

        comboDelivery.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboDelivery.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboDeliveryActionPerformed(evt);
            }
        });
        add(comboDelivery, new org.netbeans.lib.awtextra.AbsoluteConstraints(378, 388, -1, -1));

        btnAssignDeliveryAgent.setText("Assign");
        btnAssignDeliveryAgent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignDeliveryAgentActionPerformed(evt);
            }
        });
        add(btnAssignDeliveryAgent, new org.netbeans.lib.awtextra.AbsoluteConstraints(329, 427, -1, -1));

        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/back.png"))); // NOI18N
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 16, 57, -1));

        btnRefreshOrders.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/loading.png"))); // NOI18N
        btnRefreshOrders.setText("Refresh");
        btnRefreshOrders.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshOrdersActionPerformed(evt);
            }
        });
        add(btnRefreshOrders, new org.netbeans.lib.awtextra.AbsoluteConstraints(558, 105, 119, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/oxy2.gif"))); // NOI18N
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 250, 220, 30));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/oxy2.gif"))); // NOI18N
        jLabel6.setText("jLabel6");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 130, 220, 150));
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        this.userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
        Component[] comps = this.userProcessContainer.getComponents();
        for(Component comp : comps){
            if(comp instanceof AdminWorkAreaJPanel){
                AdminWorkAreaJPanel adminWorkJPanel= (AdminWorkAreaJPanel) comp;
//                systemAdminWorkAreaJPanel.populateTree();
            }
        }
    }//GEN-LAST:event_btnBackActionPerformed

    private void comboDeliveryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboDeliveryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboDeliveryActionPerformed

    private void btnAcceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAcceptActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblOrders.getSelectedRow();
        if(selectedRow < 0) {
            JOptionPane.showMessageDialog(null,"Please Select a row from table first", "Warining", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        Order order = (Order)tblOrders.getValueAt(selectedRow, 0);
        if(order.getOrderStatus().equals("Order Placed")) {
            order.setOrderStatus("Order Accepted");
        }
        
        else {
            JOptionPane.showMessageDialog(null, "Order is not in Order Placed Status");
            return;
        }
        
        this.populateCustomerOrdersTable();
        

    }//GEN-LAST:event_btnAcceptActionPerformed

    private void btnRefreshOrdersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshOrdersActionPerformed
        // TODO add your handling code here:
        ArrayList<String> orderArr = new ArrayList<String>();
        for (Order o : this.system.getOrderDirectory().getOrderDirectory()){
            if(o.getOrderStatus().equals("Order Accepted")){
                orderArr.add(String.valueOf(o.getOrderId()));
            }
            
        }
        comboOrderId.setModel(new DefaultComboBoxModel<String>(orderArr.toArray(new String[0])));
    }//GEN-LAST:event_btnRefreshOrdersActionPerformed

    private void btnAssignDeliveryAgentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignDeliveryAgentActionPerformed
        // TODO add your handling code here:
        try{
            int orderId = Integer.parseInt(comboOrderId.getSelectedItem().toString());
            Order order = this.system.getOrderDirectory().getOrderId(orderId);
            if(order.getOrderStatus().equals("Order Accepted")) {
                order.setOrderStatus("Delivery Assigned");
                order.setDeliveryMan(comboDelivery.getSelectedItem().toString());
                order.setSender(this.system.getUserAccountDirectory().getUserAccount(comboDelivery.getSelectedItem().toString()));
                JOptionPane.showMessageDialog(null, "Assigned the Delivery Agent Successfully");
            }

            else {
                JOptionPane.showMessageDialog(null, "Order is already accepted or Completed");
                return;
            }

            this.populateCustomerOrdersTable();
        }catch(NullPointerException e){
                JOptionPane.showMessageDialog(null, "No Order to assign!!!");
                return;
            }
        catch(NumberFormatException pk){
                JOptionPane.showMessageDialog(null, "Please accept orders and Refersh the order-ids!!!");
                return;
            }
        
    }//GEN-LAST:event_btnAssignDeliveryAgentActionPerformed

    private void btnRejectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRejectActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblOrders.getSelectedRow();
        if(selectedRow < 0) {
            JOptionPane.showMessageDialog(null,"Please Select a row from table first", "Warining", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        Order order = (Order)tblOrders.getValueAt(selectedRow, 0);
        int currentQuantity = 0;
        OxygenPlant plant = system.getOxygenPlantDirectory().getOxygenPlant(order.getRestaurant().getOxygenPlantName());
        for(Item i : this.system.getOxygenPlantDirectory().getOxygenPlant(plant.getOxygenPlantName()).getMenu().getMenu()){
            if(i.getItemName().equals(order.getItem().getItemName())){
                currentQuantity = i.getQuantity();
                break;
            }
        }
        this.system.getOxygenPlantDirectory().getOxygenPlant(plant.getOxygenPlantName()).getMenu().updateQunatity(order.getItem(), currentQuantity + order.getQuantity());
    
        
        if(order.getOrderStatus().equals("Order Placed")) {
            order.setOrderStatus("Order Rejected");
        }
        
        else {
            JOptionPane.showMessageDialog(null, "Order is already accepted or Completed");
            return;
        }
        
        this.populateCustomerOrdersTable();
    }//GEN-LAST:event_btnRejectActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAccept;
    private javax.swing.JButton btnAssignDeliveryAgent;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnRefreshOrders;
    private javax.swing.JButton btnReject;
    private javax.swing.JComboBox comboDelivery;
    private javax.swing.JComboBox comboOrderId;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblOrders;
    // End of variables declaration//GEN-END:variables
}
